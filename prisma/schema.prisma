// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String
  email    String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  RefreshToken RefreshToken[]
  UserRoles   UserRole[]      // 关系：一个用户可以拥有多个角色
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}


model Role {
  id          Int          @id @default(autoincrement())
  name        String        @unique
  description String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  RolePermissions RolePermission[]  // 关系：一个角色可以拥有多个权限
  UserRoles   UserRole[]    // 关系：一个角色可以分配给多个用户
}

model Permission {
  id          Int          @id @default(autoincrement())
  resource    String        // 资源名，例如 `/dashboard`
  action      String        // 操作类型，例如 `read`、`write`
  description String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  RolePermissions RolePermission[]  // 关系：一个权限可以分配给多个角色
}

model RolePermission {
  id          Int          @id @default(autoincrement())
  roleId      Int
  permissionId Int
  role        Role         @relation(fields: [roleId], references: [id])
  permission  Permission   @relation(fields: [permissionId], references: [id])
}

model UserRole {
  id          Int          @id @default(autoincrement())
  userId      String
  roleId      Int
  user        User         @relation(fields: [userId], references: [id])
  role        Role         @relation(fields: [roleId], references: [id])
}
